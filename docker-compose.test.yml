version: '3'

services:
  test:
    build:
      context: .
    environment:
      - SERVER_ENV=test
      - EVENT_PAYLOAD_SECRET_KEY=TEST_EVENT_PAYLOAD_SECRET_KEY___
      - BASIC_AUTHORIZATION_VALUE=TEST_BASIC_AUTHORIZATION_VALUE
      - BUZZAD_URL=https://localhost
      - REWARDSVC_URL=http://localhost
      - BUZZSCREEN_API_URL=https://localhost
      - AMQP_URL=amqp://rabbitmq:5672
      - AWS_ACCESS_KEY_ID=LOCAL_AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY=LOCAL_AWS_SECRET_ACCESS_KEY
    volumes:
      - ".:/go/src/github.com/Buzzvil/buzzscreen-api:delegated"
    # TODO: -p 1 -> parallel로 돌릴 방법을 찾아보자 - zune
    # 현재는 db가 각 테스트에서 공유되기 때문에 parallel로 돌리는 경우 랜덤하게 실패하는 경우 발생
    command: go test -p 1 -v github.com/Buzzvil/buzzscreen-api/...
    depends_on:
      - mysql
      - redis
      - elasticsearch564
      - dynamodb
      - rabbitmq
    links:
      - mysql
      - redis
      - elasticsearch564
      - dynamodb
      - rabbitmq

  mysql:
    image: mysql:5.6.34
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=1234
      - MYSQL_USER=bs
      - MYSQL_PASSWORD=bs123
      - MYSQL_DATABASE=buzzscreen-test
    healthcheck:
      test: "mysqladmin ping -h localhost"
      interval: 1s
      timeout: 3s
      retries: 10
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci

  elasticsearch564:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.4
    ports:
      - 9200:9200
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cat/health"]
      interval: 1s
      timeout: 3s
      retries: 10
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  redis:
    image: redis:3.2.10
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  dynamodb:
    image: amazon/dynamodb-local
    ports:
      - 20199:20199
    command: ["-jar", "DynamoDBLocal.jar", "-inMemory", "-sharedDb", "-port", "20199"]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:20199/shell/ || exit 1"]
      interval: 1s
      timeout: 10s
      retries: 3

  rabbitmq:
    image: rabbitmq:3.8-management
    ports:
      - 5672:5672
      - 15672:15672
